"""Redesign User model

Revision ID: 16b42ecdc7a2
Revises: d7409cc1bb27
Create Date: 2024-09-28 11:41:36.152604

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

from datastores.sql.models.user import User

# revision identifiers, used by Alembic.
revision: str = "16b42ecdc7a2"
down_revision: Union[str, None] = "d7409cc1bb27"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    with op.batch_alter_table("user") as batch_op:
        batch_op.add_column(sa.Column("display_name", sa.UnicodeText(), nullable=True))
        batch_op.add_column(sa.Column("username", sa.UnicodeText(), nullable=True))
        batch_op.add_column(sa.Column("password_hash", sa.UnicodeText(), nullable=True))
        batch_op.add_column(
            sa.Column("password_hash_algorithm", sa.Unicode(length=255), nullable=True)
        )
        batch_op.add_column(
            sa.Column("auth_method", sa.Unicode(length=255), nullable=True)
        )
        batch_op.add_column(
            sa.Column("profile_picture_url", sa.UnicodeText(), nullable=True)
        )
        batch_op.add_column(sa.Column("is_admin", sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column("is_robot", sa.Boolean(), nullable=True))

    # Data migration: Set default values for new fields.
    connection = op.get_bind()
    connection.execute(
        sa.update(User).values(
            display_name=sa.column("email"),
            username=sa.column("email"),
            profile_picture_url=sa.column("picture"),
            auth_method="google",
            is_admin=False,
            is_robot=False,
        )
    )

    # Adjust nullable after data migration.
    with op.batch_alter_table("user") as batch_op:
        batch_op.alter_column(
            "display_name", existing_type=sa.UnicodeText(), nullable=False
        )
        batch_op.alter_column(
            "username", existing_type=sa.UnicodeText(), nullable=False
        )
        batch_op.alter_column(
            "auth_method", existing_type=sa.Unicode(255), nullable=False
        )
        batch_op.alter_column("is_admin", existing_type=sa.Boolean(), nullable=False)
        batch_op.alter_column("is_robot", existing_type=sa.Boolean(), nullable=False)

    op.drop_index("ix_user_name", table_name="user")
    op.drop_index("ix_user_email", table_name="user")
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=False)
    op.create_index(
        op.f("ix_user_display_name"), "user", ["display_name"], unique=False
    )
    op.create_index(op.f("ix_user_is_admin"), "user", ["is_admin"], unique=False)
    op.create_index(op.f("ix_user_is_robot"), "user", ["is_robot"], unique=False)
    op.create_index(
        op.f("ix_user_password_hash_algorithm"),
        "user",
        ["password_hash_algorithm"],
        unique=False,
    )
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=True)
    op.create_index(op.f("ix_user_uuid"), "user", ["uuid"], unique=True)
    op.create_unique_constraint(None, "user", ["password_hash"])
    op.drop_column("user", "picture")
    op.drop_column("user", "name")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user", sa.Column("name", sa.TEXT(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "user", sa.Column("picture", sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.drop_constraint(None, "user", type_="unique")
    op.drop_index(op.f("ix_user_uuid"), table_name="user")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_index(op.f("ix_user_password_hash_algorithm"), table_name="user")
    op.drop_index(op.f("ix_user_is_robot"), table_name="user")
    op.drop_index(op.f("ix_user_is_admin"), table_name="user")
    op.drop_index(op.f("ix_user_display_name"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.create_index("ix_user_email", "user", ["email"], unique=True)
    op.create_index("ix_user_name", "user", ["name"], unique=False)
    op.drop_column("user", "is_robot")
    op.drop_column("user", "is_admin")
    op.drop_column("user", "profile_picture_url")
    op.drop_column("user", "auth_method")
    op.drop_column("user", "password_hash_algorithm")
    op.drop_column("user", "password_hash")
    op.drop_column("user", "username")
    op.drop_column("user", "display_name")
    # ### end Alembic commands ###
